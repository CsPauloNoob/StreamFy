@page "/login"
@using StreamFy.WebApp.Models
@using StreamFy.WebApp.Requests
@inject NavigationManager _navManager
@inject ISnackbar _snackbar


<h3>Login</h3>

<MudPaper Class="d-flex flex-column align-center justify-center" Style="height: 100vh">
    <MudCard Style="width: 100%; max-width: 400px;">
        
        <MudCardContent>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Login</MudText>

            <MudTextField @bind-Value="_nome" InputType="InputType.Text" Label="Nome" FullWidth="true" Disabled="_reg"/>
            <MudTextField @bind-Value="_email" InputType="InputType.Email" Label="Email" FullWidth="true"/>
            <MudTextField @bind-Value="_password" Label="Senha" InputType="InputType.Password" FullWidth="true"/>
            
            <MudPaper Class="d-flex">
                <MudButton Color="Color.Primary" FullWidth="true" Class="mt-8 mr-2" OnClick="TentativaLogin">
                    Entrar
                </MudButton>
                
                <MudButton Color="Color.Dark" FullWidth="true" Class="mt-8 ml-2" OnClick="TentativaRegistrar">
                    Registrar
                </MudButton>
            </MudPaper>
            

        </MudCardContent>
        
    </MudCard>
</MudPaper>


@code {
    private string _email;
    private string _nome;
    private string _password;
    private bool _reg = true;

    [Inject] 
    public UsuarioEndpoint _usuarioEndpoint { get; set; }

    private async Task TentativaLogin()
    {
        if(string.IsNullOrEmpty(_email) || 
           string.IsNullOrEmpty(_password))
        {
            _snackbar.Add("Você precisa preencher todos os campos", Severity.Error);
            return;
        }
        
        var usuario = await _usuarioEndpoint
            .Login(new UsuarioReq()
            {
                Email = _email,
                Senha = _password,
                Nome = _nome is null ? "Usuário" : _nome
            });
        
        UsuarioLogado.usuarioLogadoInfo = usuario;
        UsuarioLogado.Logado = true;
        
        _navManager.NavigateTo("/");
    }

    private async Task TentativaRegistrar()
    {
        if(string.IsNullOrEmpty(_email) || 
           string.IsNullOrEmpty(_password))
        {
            _snackbar.Add("Você precisa preencher todos os campos", Severity.Error);
            _reg = false;
            return;
        }

        var usuario = await _usuarioEndpoint
            .RegistrarUsuario(new UsuarioReq()
        {
            Email = _email,
            Senha = _password,
            Nome = _nome is null ? "Usuário" : _nome
        });

        UsuarioLogado.usuarioLogadoInfo = usuario;
        UsuarioLogado.Logado = true;
        
        _navManager.NavigateTo("/");
    }
}